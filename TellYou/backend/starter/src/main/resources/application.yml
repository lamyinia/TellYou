server:
  port: 8081
  node: 127_0_0_1-8081
  retry:
    threads: 1

tell-you:
  netty:
    port: 8082
  jwt:
    user-secret-key: ${value.jwt.user-secret-key}
    user-ttl: ${value.jwt.user-ttl}
    user-token-name: ${value.jwt.user-token-name}
    uid-key: ${value.jwt.uid-key}
  aliyun-oss:
    endpoint: ${value.aliyun-oss.endpoint}
    access-key-id: ${value.aliyun-oss.access-key-id}
    access-key-secret: ${value.aliyun-oss.access-key-secret}
    bucket-name: ${value.aliyun-oss.bucket-name}
  minio:
    endpoint: ${value.minio.endpoint}
    accessKey: ${value.minio.accessKey}
    secretKey: ${value.minio.secretKey}
    bucket: ${value.minio.bucket}
  pull:
    pullSize: ${value.pull.pullSize}
    isCompress: ${value.pull.isCompress}

spring:
  profiles:
    active: dev
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  datasource:
    username: ${value.datasource.username}
    password: ${value.datasource.password}
    url: jdbc:mysql://${value.datasource.host}:${value.datasource.port}/${value.datasource.database}?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&useLegacyDatetimeCode=false&connectionCollation=utf8mb4_unicode_ci
    driver-class-name: ${value.datasource.driver-class-name}
  data:
    redis:
      host: ${value.redis.host}
      database: ${value.redis.database}
      port: ${value.redis.port}
      password: ${value.redis.password}
    mongodb:
      uri: mongodb://${value.mongodb.host}:${value.mongodb.port}/${value.mongodb.database}?replicaSet=rs0&retryWrites=false
      auto-index-creation: true
      encryption:
        enabled: true
  mail:
    username: ${value.mail.username}
    password: ${value.mail.password}
    host: smtp.qq.com
    port: 465
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          ssl:
            enable: true
            required: false
        debug: true

mybatis-plus:
  configuration:
    auto-mapping-behavior: full
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    default-fetch-size: 100
    default-statement-timeout: 30
  mapper-locations: classpath*:mapper/*.xml

logging:
  charset:
    console: UTF-8
    file: UTF-8
  file:
    name: ./backend/logs/record.log
  level:
    root: info          # 全局默认 info

knife4j:
  enable: true

rocketmq:
  name-server: 127.0.0.1:9876
  producer:
    group: chat-producer-group
  consumer:
    group: chat-message-consumer-group
    pull-batch-size: 10
    consume-timeout: 15
    consume-mode: CONCURRENTLY

seata:
  enabled: true
  application-id: ${spring.application.name}
  tx-service-group: my_test_tx_group
  enable-auto-data-source-proxy: true
  data-source-proxy-mode: AT
  service:
    vgroup-mapping:
      my_test_tx_group: default
    grouplist:
      default: 127.0.0.1:8091
    enable-degrade: false
    disable-global-transaction: false
  registry:
    type: file
  config:
    type: file
    file:
      name: file.conf


